services:
  firewall:
    image: nginx:alpine
    container_name: firewall
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./firewall/entrypoint.sh:/entrypoint.sh
      - ./firewall/nginx-ssl.conf:/etc/nginx/nginx-ssl.conf
      - ./api/signature-backend/certs:/etc/nginx/ssl:ro
    depends_on:
      - webapp-angular
    command: ["/entrypoint.sh"]
    networks:
      - internal_net

  webapp-angular:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: webapp_angular
    expose:
      - "80"
    depends_on:
      - api
    networks:
      - internal_net
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234
      POSTGRES_DB: taller1
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - internal_net

  api:
    build:
      context: ./api/signature-backend
      dockerfile: Dockerfile
    container_name: node_api
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - DB_HOST=postgres
      - DB_USER=admin
      - DB_PASSWORD=admin1234
      - DB_NAME=taller1
    depends_on:
      - postgres
    networks:
      - internal_net

networks:
  internal_net:
    driver: bridge

volumes:
  postgres_data:
